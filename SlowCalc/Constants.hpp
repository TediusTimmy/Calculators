/*
   This file is part of SlowCalc.

   Copyright (C) 2010 Thomas DiModica <ricinwich@yahoo.com>

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
   File: Constants.hpp
*/

#ifndef CONSTANTS_HPP
#define CONSTANTS_HPP

//HEADER:
// Float includes everything we need, including the definition of a Float.
#include "Float.hpp"

namespace DecFloat
 {

   /*
      All of the special constants that the functions will
      use, all to 600 places of precision, 599 places of
      accuracy.

      They are 600 digits in case I wish to expand maxLength
      to 512 digits. That gives 88 digits of exra precision.
      TAN adds four digits, then calls SIN and COS, which each
      add 8. That's an example. I don't know how deep nesting gets.

      These are named to conflict with the constant names
      in <math.h>, or be regular with them.

      All of these constants can be generated by the code
      of the functions, albeit slowly. These were generated
      by similar code written by me to at least 1024 places of
      precision, then verified WITH THIS CODE. For PI and E,
      they were also verified with precise versions taken from
      Project Gutenberg.

      Update: as of version 2, M_LN10 and M_LOG10E are harder to generate with
      this code. Use ln(10) = ln(1.25) + 6 * ln(sqrt(2))
   */

   extern const Float M_1;

   extern const Float M_LN10;

   extern const Float M_PI;

   extern const Float M_PI_2;

   extern const Float M_PI_4;

   extern const Float M_2PI;

   extern const Float M_1_2PI;

   extern const Float M_LOG10E;

   extern const Float M_1_SQRT10;

 } //namespace DecFloat

#endif /* CONSTANTS_HPP */
